/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';


import {
  Color,
  Size,
} from './types';


export namespace Components {

  interface MyAccordion {}
  interface MyAccordionAttributes extends StencilHTMLAttributes {}

  interface MyButton {
    'color': Color;
    'size': Size;
  }
  interface MyButtonAttributes extends StencilHTMLAttributes {
    'color'?: Color;
    'onOnSmash'?: (event: CustomEvent) => void;
    'size'?: Size;
  }

  interface MyComponent {
    /**
    * The first name
    */
    'first': string;
    /**
    * The last name
    */
    'last': string;
    /**
    * The middle name
    */
    'middle': string;
  }
  interface MyComponentAttributes extends StencilHTMLAttributes {
    /**
    * The first name
    */
    'first'?: string;
    /**
    * The last name
    */
    'last'?: string;
    /**
    * The middle name
    */
    'middle'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'MyAccordion': Components.MyAccordion;
    'MyButton': Components.MyButton;
    'MyComponent': Components.MyComponent;
  }

  interface StencilIntrinsicElements {
    'my-accordion': Components.MyAccordionAttributes;
    'my-button': Components.MyButtonAttributes;
    'my-component': Components.MyComponentAttributes;
  }


  interface HTMLMyAccordionElement extends Components.MyAccordion, HTMLStencilElement {}
  var HTMLMyAccordionElement: {
    prototype: HTMLMyAccordionElement;
    new (): HTMLMyAccordionElement;
  };

  interface HTMLMyButtonElement extends Components.MyButton, HTMLStencilElement {}
  var HTMLMyButtonElement: {
    prototype: HTMLMyButtonElement;
    new (): HTMLMyButtonElement;
  };

  interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };

  interface HTMLElementTagNameMap {
    'my-accordion': HTMLMyAccordionElement
    'my-button': HTMLMyButtonElement
    'my-component': HTMLMyComponentElement
  }

  interface ElementTagNameMap {
    'my-accordion': HTMLMyAccordionElement;
    'my-button': HTMLMyButtonElement;
    'my-component': HTMLMyComponentElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
